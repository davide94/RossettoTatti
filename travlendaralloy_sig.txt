//SIGNATURES

sig Sex{
male: Bool,
female: Bool
}{(male=true implies female=false)||(female=true implies male=false)}

//Float type abstraction
sig Float{}

sig Location{
latitude: Float,
longitude: Float
}

abstract sig Mean{}
sig TRAIN extends Mean{}
sig UNDERGROUND extends Mean{}
sig TRAM extends Mean{}
sig BUS extends Mean{}
sig TAXI extends Mean{}
sig CARSHARING extends Mean{}
sig BIKESHARING extends Mean{}
sig PLANE extends Mean{}
sig FERRY extends Mean{}
sig BYWALK extends Mean{}

//Data type abstraction
sig Data{}

sig Meeting{
name: one String,
start: one Data,
end: one Data,
place: one Location,
people: Int,
transportMode: some Mean
}

//Time type abstraction
sig Time{}

//Supposing that duration is an integer attribute
sig Break{
name: one String,
startAtLeast: one Time,
endAtMost: one Time,
duration: one Int
}

sig ServerCalendar{
meetingEvent: some Meeting,
breakEvent: some Break
}

sig User{
firstName: one String,
lastName: one String,
dateOfBirth: one Data,
sex: one Sex,
mailAddress: one String,
password: one String,
drivingLicenceNumber: lone Int,
userMeeting: some Meeting,
userBreak: one Break,
userMeans: some Mean
}
